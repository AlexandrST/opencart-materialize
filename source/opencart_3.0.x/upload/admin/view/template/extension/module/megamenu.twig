{{ header }}{{ column_left }}
<div id="content">
	<div class="page-header">
		<div class="container-fluid">
			<h1>{{ megamenu_title }}</h1>
			<ul class="breadcrumb">
				{% for breadcrumb in breadcrumbs %}
				<li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
				{% endfor %}
			</ul>
		</div>
	</div>
	<div class="container-fluid">
		<form action="{{ action }}" method="post" enctype="multipart/form-data" id="form-module" class="form-horizontal">
			<div class="row">
				<div class="col-md-4 col-md-push-8">
					<div class="panel panel-default" id="panel-data">
						<div class="panel-heading"><h3 class="panel-title"><i class="fa fa-power-off"></i> {{ entry_status }}</h3></div>
						<div class="panel-body">
							<select name="module_megamenu_status" id="input-status" class="selectpicker show-tick" data-width="100%">
								{% if module_megamenu_status %}
								<option value="1" selected="selected">{{ text_enabled }}</option>
								<option value="0">{{ text_disabled }}</option>
								{% else %}
								<option value="1">{{ text_enabled }}</option>
								<option value="0" selected="selected">{{ text_disabled }}</option>
								{% endif %}
							</select>
						</div>
						<div class="panel-footer">
							<div class="row">
								<div class="col-sm-6">
									<a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i> {{ button_cancel }}</a>
								</div>
								<div class="col-sm-6 text-right">
									<button type="submit" form="form-module" data-toggle="tooltip" title="{{ button_save }}" class="btn btn-primary"><i class="fa fa-save"></i> {{ button_save }}</button>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="col-md-8 col-md-pull-4">
					<div class="panel panel-default">
						<div class="panel-heading"><h3 class="panel-title"><i class="fa fa-pencil"></i> {{ text_edit }}</h3></div>
						<div class="panel-body">
							<ul class="nav nav-tabs">
								<li class="active"><a href="#tab-common" data-toggle="tab">Общее</a></li>
								{% if materializeapi %}<li><a href="#tab-materializeapi" data-toggle="tab">Информация о шаблоне</a></li>{% endif %}
							</ul>
							<div class="tab-content">
								<div class="tab-pane active" id="tab-common">
									<div class="row">
										<div class="col-sm-3">
											<ul class="nav nav-pills nav-stacked" id="tab-common-pills">
												<li><a href="#tab-categories" data-toggle="tab">Категории</a></li>
												<li><a href="#tab-settings" data-toggle="tab">Настройки</a></li>
												<li><a href="#tab-optimization" data-toggle="tab">Оптимизация</a></li>
											</ul>
										</div>
										<div class="col-sm-9">
											<div class="tab-content">
												<div class="tab-pane" id="tab-categories">
													{% for category in categories %}
													<div class="panel panel-default">
														<div class="panel-heading arrow-rotate collapsed" data-toggle="collapse" href="#collapse{{ category.category_id }}"><h3 class="panel-title">{{ category.name }}</h3></div>
														<div id="collapse{{ category.category_id }}" class="panel-collapse collapse">
															<div class="panel-body megamenu-settings" data-category-id="{{ category.category_id }}" data-content-info="{{ module_megamenu_category[category.category_id].content_info }}">
																<label class="control-label" for="input-sort-order{{ category.category_id }}">Порядок сортировки</label>
																<input type="text" name="module_megamenu_category[{{ category.category_id }}][sort_order]" value="{{ module_megamenu_category[category.category_id].sort_order }}" placeholder="{{ entry_sort_order }}" id="input-sort-order{{ category.category_id }}" class="form-control" />
																<hr>
																<div class="media overflow-visible materialize-colors">
																	<div class="media-body overflow-visible">
																		<h5 class="media-heading text-bold required">Настройка цвета для мега меню</h5>
																		<select name="module_megamenu_category[{{ category.category_id }}][color]" class="selectpicker selectpicker-live-search show-tick">
																			{% for color in materialize_get_colors %}
																			{% if color.name == module_megamenu_category[category.category_id].color %}
																			<option value="{{ color.name }}" class="{{ color.name }} select-color" data-hex="#{{ color.hex }}" style="background: #{{ color.hex }};" selected="selected">{{ color.name }}</option>
																			{% else %}
																			<option value="{{ color.name }}" class="{{ color.name }} select-color" data-hex="#{{ color.hex }}" style="background: #{{ color.hex }};">{{ color.name }}</option>
																			{% endif %}
																			{% endfor %}
																		</select>
																		<select name="module_megamenu_category[{{ category.category_id }}][color_text]" class="selectpicker selectpicker-live-search show-tick">
																			{% for color in materialize_get_colors_text %}
																			{% if color.name == module_megamenu_category[category.category_id].color_text %}
																			<option value="{{ color.name }}" class="{{ color.name }} select-color-text" data-hex="#{{ color.hex }}" style="background: #{{ color.hex }};" selected="selected">{{ color.name }}</option>
																			{% else %}
																			<option value="{{ color.name }}" class="{{ color.name }} select-color-text" data-hex="#{{ color.hex }}" style="background: #{{ color.hex }};">{{ color.name }}</option>
																			{% endif %}
																			{% endfor %}
																		</select>
																	</div>
																	<div class="media-right media-middle">
																		<div class="thumbnail materialize-color-thumbnail">Text</div>
																	</div>
																</div>
																<hr>
																<label class="control-label" for="input-megamenu-type{{ category.category_id }}">Тип мега меню</label>
																<select name="module_megamenu_category[{{ category.category_id }}][content_type]" id="input-megamenu-type{{ category.category_id }}" class="selectpicker show-tick" data-width="100%">
																{% for content_type in content_types %}
																	{% if module_megamenu_category[category.category_id].content_type == content_type.value %}
																	<option value="{{ content_type.value }}" selected="selected">{{ content_type.name }}</option>
																	{% else %}
																	<option value="{{ content_type.value }}">{{ content_type.name }}</option>
																	{% endif %}
																{% endfor %}
																</select>
																<hr>
																<div id="megamenu-content-wrap{{ category.category_id }}"></div>
															</div>
														</div>
													</div>
													{% endfor %}
												</div>
												<div class="tab-pane" id="tab-settings">
													<div class="list-group-item">
														<div class="media">
															<div class="media-body">
																<h4 class="media-heading text-medium">Фиксировать при прокрутке</h4>
																<p>При прокручивании страниц сайта меню будет фиксироваться вверху сайта.</p>
															</div>
															<div class="media-right media-middle">
																<label class="form-switch pull-right">
																	<input name="module_megamenu_settings[fix]" type="checkbox" {{ module_megamenu_settings.fix == 'on' ? 'checked="checked"' }}>
																	<i></i>
																</label>
															</div>
														</div>
													</div>
													<div class="list-group-item">
														<div class="media">
															<div class="media-body">
																<h4 class="media-heading text-medium">Центрировать</h4>
																<p>Список категорий будет фиксироваться по центру. Отключение этой опции позволяет размещать большее количество категорий в одну строку.</p>
															</div>
															<div class="media-right media-middle">
																<label class="form-switch pull-right">
																	<input name="module_megamenu_settings[center]" type="checkbox" {{ module_megamenu_settings.center == 'on' ? 'checked="checked"' }}>
																	<i></i>
																</label>
															</div>
														</div>
													</div>
													<div class="list-group-item">
														<div class="media">
															<div class="media-body">
																<h4 class="media-heading text-medium">Кнопка "Домой"</h4>
																<p>Добавляет в самое начало ссылку на главную страницу сайта.</p>
															</div>
															<div class="media-right media-middle">
																<label class="form-switch pull-right">
																	<input name="module_megamenu_settings[home]" type="checkbox" {{ module_megamenu_settings.home == 'on' ? 'checked="checked"' }}>
																	<i></i>
																</label>
															</div>
														</div>
													</div>
													<div class="list-group-item">
														<div class="media">
															<div class="media-body">
																<h4 class="media-heading text-medium">Заголовок</h4>
																<p>Вверху списка категорий будет заголовок категории со ссылкой на категорию.</p>
															</div>
															<div class="media-right media-middle">
																<label class="form-switch pull-right">
																	<input name="module_megamenu_settings[category_title]" type="checkbox" {{ module_megamenu_settings.category_title == 'on' ? 'checked="checked"' }}>
																	<i></i>
																</label>
															</div>
														</div>
													</div>
													<div class="list-group-item">
														<div class="media">
															<div class="media-body">
																<h4 class="media-heading text-medium">Показать все...</h4>
																<p>Внизу списка категорий будет ссылка с текстом "Показать все Название категории".</p>
															</div>
															<div class="media-right media-middle">
																<label class="form-switch pull-right">
																	<input name="module_megamenu_settings[see_all]" type="checkbox" {{ module_megamenu_settings.see_all == 'on' ? 'checked="checked"' }}>
																	<i></i>
																</label>
															</div>
														</div>
													</div>
												</div>
												<div class="tab-pane" id="tab-optimization">
													<div class="list-group-item">
														<div class="media">
															<div class="media-body">
																<h4 class="media-heading text-medium">Кэширование категорий</h4>
																<p>Включить кэширование списка категорий для мега меню.</p>
															</div>
															<div class="media-right media-middle">
																<label class="form-switch pull-right">
																	<input name="module_megamenu_settings[optimization][cached_categories]" type="checkbox" {{ module_megamenu_settings.optimization.cached_categories == 'on' ? 'checked="checked"' }}>
																	<i></i>
																</label>
															</div>
														</div>
													</div>
													<hr>
													<div class="form-group">
														<div class="col-xs-12 text-right">
															<button type="button" class="btn btn-danger" id="cache-clear-categories">Очистить кэш категорий</button>
														</div>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
								{{ materializeapi }}
							</div>
						</div>
						{{ appeal_footer }}
					</div>
				</div>
			</div>
		</form>
	</div>
	{{ installed }}
</div>
<script type="text/javascript">
	$('#tab-common-pills a:first').tab('show');

	// Selectpicker
	$('.selectpicker.selectpicker-live-search').selectpicker({
		size: 10,
		liveSearch: true,
		iconBase: 'fa',
		tickIcon: 'fa-check'
	});

	var materializeColors = $('.materialize-colors');

	materializeColors.each(function() {
		var currentBackground = $(this).find('option:selected.select-color').data('hex'),
			currentColor = $(this).find('option:selected.select-color-text').data('hex');

		$(this).find('.materialize-color-thumbnail').css({
			'background': currentBackground,
			'color': currentColor
		});
	});

	materializeColors.change(function(){
		var currentBackground = $(this).find('option:selected.select-color').data('hex'),
			currentColor = $(this).find('option:selected.select-color-text').data('hex');

		$(this).find('.materialize-color-thumbnail').css({
			'background': currentBackground,
			'color': currentColor
		});
	});

	var megamenuSettings = $('.megamenu-settings');

	megamenuSettings.each(function(e) {
		e += 1;

		var categoryId = $(this).data('category-id'),
			contentInfo = $(this).data('content-info'),
			selectMegamenuType = $('#input-megamenu-type' + categoryId),
			megamenuContentWrap = $('#megamenu-content-wrap' + categoryId);

		var htmlLabel = '<label class=\'control-label\' for=\'input-megamenu-content' + categoryId + '\'>Контент мега меню</label>',
			htmlSelectOpen = '<select name=\'module_megamenu_category[' + categoryId + '][content_info]\' id=\'input-megamenu-content' + categoryId + '\' class=\'selectpicker show-tick\' data-width=\'100%\'>',
			htmlSelectClose = '</select>';

		selectMegamenuType.on('change', function() {
			megamenuContentWrap.empty();

			if ((this.value == 'featured') || (this.value == 'bestseller') || (this.value == 'special') || (this.value == 'html') || (this.value == 'banner')) {
				$.ajax({
					url: 'index.php?route=extension/module/megamenu/megamenuType&content_type=' + this.value + '&user_token={{ user_token }}',
					dataType: 'json',
					beforeSend: function() {
						megamenuContentWrap.after('<div class="loader-wrapper"><div class="showbox"><div class="loader"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10"/></svg></div></div></div>');
					},
					complete: function() {
						$('.loader-wrapper').remove();
					},
					success: function(json) {
						if (json != '') {
							html  = htmlLabel;
							html += htmlSelectOpen;

							for (i = 0; i < json.length; i++) {
								html += '<option value="' + json[i]['module_id'] + '"';

								if (json[i]['module_id'] == contentInfo) {
									html += ' selected="selected"';
								}

								html += '>' + json[i]['name'] + '</option>';
							}

							html += htmlSelectClose;
							megamenuContentWrap.html(html);
						}

						$('.selectpicker').selectpicker({
							iconBase: 'fa',
							tickIcon: 'fa-check'
						},('refresh'));
					},
					error: function(xhr, ajaxOptions, thrownError) {
						alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
					}
				});
			} else if (this.value == 'image_custom') {
				$.ajax({
					url: 'index.php?route=extension/module/megamenu/getMegamenuImages&category_id=' + categoryId + '&content_type=' + this.value + '&user_token={{ user_token }}',
					dataType: 'json',
					beforeSend: function() {
						megamenuContentWrap.after('<div class="loader-wrapper"><div class="showbox"><div class="loader"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10"/></svg></div></div></div>');
					},
					complete: function() {
						$('.loader-wrapper').remove();
					},
					success: function(json) {
						if (json != '') {
							html  = '<div class="media">';
							html += '	<div class="media-body media-middle">';
							html += '		<h5 class="media-heading text-medium required">Размеры изображения</h5>';
							html += '		<div class="row">';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_width]" value="' + json['image_width'] + '" placeholder="Ширина" class="form-control" />';
							html += '			</div>';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_height]" value="' + json['image_height'] + '" placeholder="Высота" class="form-control" />';
							html += '			</div>';
							html += '		</div>';
							html += '	</div>';
							html += '	<div class="media-right media-middle">';
							html += '		<a href="" id="thumb-image' + categoryId + '" data-toggle="image" class="img-thumbnail"><img src="' + json['image'] + '" alt="" title="" data-placeholder="{{ placeholder }}" /></a>';
							html += '		<input type="hidden" name="module_megamenu_category[' + categoryId + '][content_info]" value="' + json['value'] + '" id="input-image' + categoryId + '" />';
							html += '	</div>';
							html += '</div>';
							megamenuContentWrap.html(html);
						} else {
							html  = '<div class="media">';
							html += '	<div class="media-body media-middle">';
							html += '		<h5 class="media-heading text-medium required">Размеры изображения</h5>';
							html += '		<div class="row">';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_width]" value="" placeholder="Ширина" class="form-control" />';
							html += '			</div>';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_height]" value="" placeholder="Высота" class="form-control" />';
							html += '			</div>';
							html += '		</div>';
							html += '	</div>';
							html += '	<div class="media-right media-middle">';
							html += '		<a href="" id="thumb-image' + categoryId + '" data-toggle="image" class="img-thumbnail"><img src="{{ placeholder }}" alt="" title="" data-placeholder="{{ placeholder }}" /></a>';
							html += '		<input type="hidden" name="module_megamenu_category[' + categoryId + '][content_info]" value="" id="input-image' + categoryId + '" />';
							html += '	</div>';
							html += '</div>';
							megamenuContentWrap.html(html);
						}

						$('.selectpicker').selectpicker({
							iconBase: 'fa',
							tickIcon: 'fa-check'
						},('refresh'));
					},
					error: function(xhr, ajaxOptions, thrownError) {
						alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
					}
				});
			} else if (this.value == 'image_background') {
				$.ajax({
					url: 'index.php?route=extension/module/megamenu/getMegamenuImages&category_id=' + categoryId + '&content_type=' + this.value + '&user_token={{ user_token }}',
					dataType: 'json',
					beforeSend: function() {
						megamenuContentWrap.after('<div class="loader-wrapper"><div class="showbox"><div class="loader"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10"/></svg></div></div></div>');
					},
					complete: function() {
						$('.loader-wrapper').remove();
					},
					success: function(json) {
						if (json != '') {
							html  = '<div class="media">';
							html += '	<div class="media-body media-middle">';
							html += '		<h5 class="media-heading text-medium required">Размеры изображения</h5>';
							html += '		<div class="row">';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_width]" value="' + json['image_width'] + '" placeholder="Ширина" class="form-control" />';
							html += '			</div>';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_height]" value="' + json['image_height'] + '" placeholder="Высота" class="form-control" />';
							html += '			</div>';
							html += '		</div>';
							html += '		<hr>';
							html += '		<div class="row">';
							html += '			<textarea name="module_megamenu_settings[' + categoryId + '][background_settings]" rows="10" id="bg' + categoryId + '"></textarea>';
							html += '		</div>';
							html += '	</div>';
							html += '	<div class="media-right media-middle">';
							html += '		<a href="" id="thumb-image' + categoryId + '" data-toggle="image" class="img-thumbnail"><img src="' + json['image'] + '" alt="" title="" data-placeholder="{{ placeholder }}" /></a>';
							html += '		<input type="hidden" name="module_megamenu_category[' + categoryId + '][content_info]" value="' + json['value'] + '" id="input-image' + categoryId + '" />';
							html += '	</div>';
							html += '</div>';
							megamenuContentWrap.html(html);
						} else {
							html  = '<div class="media">';
							html += '	<div class="media-body media-middle">';
							html += '		<h5 class="media-heading text-medium required">Размеры изображения</h5>';
							html += '		<div class="row">';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_width]" value="" placeholder="Ширина" class="form-control" />';
							html += '			</div>';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_height]" value="" placeholder="Высота" class="form-control" />';
							html += '			</div>';
							html += '		</div>';
							html += '		<hr>';
							html += '		<div class="row">';
							html += '			<textarea name="module_megamenu_settings[' + categoryId + '][background_settings]" rows="10" id="bg' + categoryId + '"></textarea>';
							html += '		</div>';
							html += '	</div>';
							html += '	<div class="media-right media-middle">';
							html += '		<a href="" id="thumb-image' + categoryId + '" data-toggle="image" class="img-thumbnail"><img src="{{ placeholder }}" alt="" title="" data-placeholder="{{ placeholder }}" /></a>';
							html += '		<input type="hidden" name="module_megamenu_category[' + categoryId + '][content_info]" value="" id="input-image' + categoryId + '" />';
							html += '	</div>';
							html += '</div>';
							megamenuContentWrap.html(html);
						}

						$('.loader-wrapper').remove(); /* Forcibly removes the .loader-wrapper, for some reason it does not disappear */

						var codemirror = CodeMirror.fromTextArea(document.getElementById('bg' + categoryId), {
							lineNumbers: true,
							theme: 'monokai'
						});

						codemirror.setSize(null, 100);
						codemirror.setValue(json['bg_code']);

						$('.selectpicker').selectpicker({
							iconBase: 'fa',
							tickIcon: 'fa-check'
						},('refresh'));
					},
					error: function(xhr, ajaxOptions, thrownError) {
						alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
					}
				});
			} else if (this.value == 'category_image') {
				$.ajax({
					url: 'index.php?route=extension/module/megamenu/getMegamenuImages&category_id=' + categoryId + '&content_type=' + this.value + '&user_token={{ user_token }}',
					dataType: 'json',
					beforeSend: function() {
						megamenuContentWrap.after('<div class="loader-wrapper"><div class="showbox"><div class="loader"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10"/></svg></div></div></div>');
					},
					complete: function() {
						$('.loader-wrapper').remove();
					},
					success: function(json) {
						if (json != '') {
							html  = '<div class="media">';
							html += '	<div class="media-body media-middle">';
							html += '		<h5 class="media-heading text-medium required">Размеры изображения</h5>';
							html += '		<div class="row">';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_width]" value="' + json['image_width'] + '" placeholder="Ширина" class="form-control" />';
							html += '			</div>';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_height]" value="' + json['image_height'] + '" placeholder="Высота" class="form-control" />';
							html += '			</div>';
							html += '		</div>';
							html += '		<hr>';
							html += '	</div>';
							html += '</div>';
							megamenuContentWrap.html(html);
						} else {
							html  = '<div class="media">';
							html += '	<div class="media-body media-middle">';
							html += '		<h5 class="media-heading text-medium required">Размеры изображения</h5>';
							html += '		<div class="row">';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_width]" value="" placeholder="Ширина" class="form-control" />';
							html += '			</div>';
							html += '			<div class="col-sm-6">';
							html += '				<input type="text" name="module_megamenu_settings[' + categoryId + '][image_height]" value="" placeholder="Высота" class="form-control" />';
							html += '			</div>';
							html += '		</div>';
							html += '		<hr>';
							html += '	</div>';
							html += '</div>';
							megamenuContentWrap.html(html);
						}
					},
					error: function(xhr, ajaxOptions, thrownError) {
						alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
					}
				});
			}
		});
		selectMegamenuType.trigger('change');
	});

	// Clear cache
	$(document).on('click', '#cache-clear-categories', function() {
		$.ajax({
			url: 'index.php?route=extension/module/megamenu/clearCacheCategories&user_token={{ user_token }}',
			type: 'post',
			dataType: 'json',
			beforeSend: function() {
				$('#cache-clear').button('loading');
			},
			complete: function() {
				$('#cache-clear').button('reset');
			},
			success: function(json) {
				if (json['success']) {
					successNotification({
						title: 'Очистка кэша',
						message: json['success']
					});
				}
			},
			error: function(xhr, ajaxOptions, thrownError) {
				alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
			}
		});
	});

	var successNotification = window.createNotification({
			theme: 'success',
			displayCloseButton: true,
			showDuration: 5000
		}),
		infoNotification = window.createNotification({
			theme: 'info',
			displayCloseButton: true,
			showDuration: 5000
		}),
		warningNotification = window.createNotification({
			theme: 'warning',
			displayCloseButton: true,
			showDuration: 5000
		}),
		errorNotification = window.createNotification({
			theme: 'error',
			displayCloseButton: true,
			showDuration: 5000
		}),
		noneNotification = window.createNotification({
			theme: 'none',
			displayCloseButton: true,
			showDuration: 5000
		});

	// Notify
	{% for error in errors %}
	errorNotification({
		message: '{{ error }}'
	});
	{% endfor %}
</script>
{{ footer }}